[tool.ruff]
line-length = 150

# Allowed errors that Ruff will report
lint.select = [
    "ANN",      # Type annotations enforcement
    "ARG",      # Unused or misused arguments
    "B",        # Flake8-Bugbear (better security)
    "C4",       # Code complexity
    "C90",      # Cyclic imports
    "D",        # Docstrings (PEP257, Google/Numpy style)
    "DOC",      # Pydoclint
    "E",        # Flake8 errors (e.g., incorrect syntax)
    "F",        # Undeclared variables
    "FIX001",   # FIXME in the code
    "FURB",     # Clean up and optimize code
    "I",        # Automatic import sorting
    "N",        # Variable naming conventions
    "PERF",     # Performance optimizations
    "PL",       # Pylint rules
    "Q",        # Flake8 quotes
    "RET",      # Proper return statements and values
    "RUF",      # Ruff-specific rules
    "S",        # Security issues (e.g., use of `eval`, hardcoded passwords)
    "SIM",      # Simplified code
    "UP",       # Upgrade to newer Python syntax
    "W",        # Flake8 warnings
]

lint.ignore = [
    "ANN401",   # Dynamically typed expressions (typing.Any) are disallowed
    "E501",     # Ignore long lines
    "PLR0913",  # Too many arguments in function definition
    "PLW0603",  # Using the global statement
]

lint.fixable = ["ALL"]
lint.unfixable = []

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["D", "S101"]
